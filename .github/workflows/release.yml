name: Release
on:
  workflow_dispatch:
  repository_dispatch:
env:
  DEBIAN_FRONTEND: noninteractive
  TEMPORARY_DIRECTORY: /home/runner/work/_temp
  CI_COMMIT_MESSAGE: "chore: release"
  CI_COMMIT_AUTHOR: CI
  CI_COMMIT_EMAIL: ci@qoopido.com
jobs:
  build:
    name: Build multiarch images
    # runs-on: ubuntu-latest
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main
          ssh-key: ${{ secrets.PRIVATE_KEY }}
          submodules: true
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Authenticate registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Setup environment
        run: |
          ROOT=$(pwd)
          DOCKER_TAG_HASH="${{ github.event.client_payload.hash }}-$(date +'%Y%m%d-%H%M%S')"
          DOCKER_TAG_VERSION="${{ github.event.client_payload.tag }}"
          DOCKER_TAG_VARIANT="${{ github.event.client_payload.variant }}"
          DOCKER_TAG_LATEST="latest"

          if [ ! -z "${DOCKER_TAG_VARIANT}" ]
          then
            DOCKER_TAG_VERSION="${DOCKER_TAG_VERSION}-${DOCKER_TAG_VARIANT}"
          fi
          
          echo "ROOT=${ROOT}" >> "${GITHUB_ENV}"
          echo "DOCKER_TAG_HASH=${DOCKER_TAG_HASH}" >> "${GITHUB_ENV}"
          echo "DOCKER_TAG_VERSION=${DOCKER_TAG_VERSION}" >> "${GITHUB_ENV}"
          echo "DOCKER_TAG_VARIANT=${DOCKER_TAG_VARIANT}" >> "${GITHUB_ENV}"
          echo "DOCKER_TAG_LATEST=${DOCKER_TAG_LATEST}" >> "${GITHUB_ENV}"
      - name: Build image
        run: |
          cd ./telerising
          git checkout ${{ github.event.client_payload.tag }}
          cd -
          
          docker buildx build --platform linux/amd64,linux/arm64,linux/arm/v7 --compress --no-cache --force-rm --push -t qoopido/telerising.minimal:${{ env.DOCKER_TAG_HASH }} -t qoopido/telerising.minimal:${{ env.DOCKER_TAG_VERSION }} -t qoopido/telerising.minimal:${{ env.DOCKER_TAG_LATEST }} .
          docker buildx build --platform linux/amd64 --target builder --compress --load -t qoopido/telerising.minimal:amd64-builder .
          docker buildx build --platform linux/arm64 --target builder --compress --load -t qoopido/telerising.minimal:arm64-builder .
          docker buildx build --platform linux/arm/v7 --target builder --compress --load -t qoopido/telerising.minimal:arm-builder .
          docker create --name=telerising-amd64 --platform linux/amd64 qoopido/telerising.minimal:amd64-builder
          docker create --name=telerising-arm64 --platform linux/arm64 qoopido/telerising.minimal:arm64-builder
          docker create --name=telerising-arm --platform linux/arm/v7 qoopido/telerising.minimal:arm-builder
          rm -rf ./binaries/*
          docker container cp telerising-amd64:/var/app/telerising.dist/ ./binaries/amd64
          docker container cp telerising-arm64:/var/app/telerising.dist/ ./binaries/arm64
          docker container cp telerising-arm:/var/app/telerising.dist/ ./binaries/arm
          tar -czvf ./binaries/telerising.amd64.tar.gz -C ${{ env.ROOT }}/binaries/amd64 ./
          tar -czvf ./binaries/telerising.arm64.tar.gz -C ${{ env.ROOT }}/binaries/arm64 ./
          tar -czvf ./binaries/telerising.arm.tar.gz -C ${{ env.ROOT }}/binaries/arm ./
          rm -rf ./binaries/amd64 ./binaries/arm64 ./binaries/arm
          
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "${{ env.CI_COMMIT_EMAIL }}"
          git add telerising
          git commit -a -m "${{ env.CI_COMMIT_MESSAGE }}"
          git tag -a -f ${{ env.DOCKER_TAG_VERSION }} -m ""
          git push
      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: true
          name: ${{ env.DOCKER_TAG_VERSION }}
          tag_name: ${{ env.DOCKER_TAG_VERSION }}
          files: |
            ./binaries/telerising.amd64.tar.gz
            ./binaries/telerising.arm64.tar.gz
            ./binaries/telerising.arm.tar.gz